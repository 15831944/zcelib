/*!
* @copyright  2004-2013  Apache License, Version 2.0 FULLSAIL
* @filename   zce_shm_predefine.h
* @author     Sailzeng <sailerzeng@gmail.com>
* @version
* @date       2005年10月21日
* @brief      实现一套在共享内存使用的容器类，用于服务器的代码，
*             我的设计目标是
*             1.可以在共享内存在中使用，而且可以共享，而且还可以在服务器恢复（崩溃后
*             重新拉起）的时候还能恢复到服务原来的状态，（当然不是所有的状态，我不是
*             做银行业）
*             2.高效，性能至少要能和STL比肩，
*             3.兼容STL的语法，包括迭代器，让大家改造起来成本最低，
* 
*             关于多进程间共享，我先用过ACE的实现，他的实现比较精巧（也复杂），他自己
*             设计了内存分配器ACE_Malloc_T，以及保存位置无关地址的类似指针用途的模版
*             ACE_Based_Pointer_Basic，通过共享内存地址，对象地址，得到内部指针相
*             对对象地址的偏移，这样，在共享内存的内部就只有偏移了，
*             但这个实现过于……重了。
* 
*             BOOST的interprocess也可作为容器内存分配器，的确可以让容器在共享内存
*             中使用，但他的每个对象都要进行分配，而且没有预估尺寸这些方法，所以其实也
*             不太合适在服务器开发，吐槽一下，interprocess诞生的年代应该是2008年，
*             我的代码出现比他可找多了。
* 
*             而我选择了完全在内部完全不使用指针的方式，固定最大数量,所有的数据开始都
*             分配好，通过下标保存偏移位置的方式。
*             这样无论是多个共享者，还是重启恢复都，能搞掂，而且性能也很好。
* 
* @details    又想扰痒痒了,又想扰痒痒了. 但这次应该扰的很舒服的一次，大大方便了我
*             日后的服务器开发，而且让我真正进入了模版编程的门。
*             我要承认,我学（偷）用了很多SGI STL的代码,
*             这个定义风格和我的其他代码不一样,重要的目的是保持和STL的函数风格一致
* 
*             改进历史
*             0.Date  : 2005XXXX
*             Author  : Sailzeng
*             Modification  :第一版完成，完成了开链的hash,淘汰功能的hash,双向链表
*             的list,vector,avl树的代码暂时放弃了,
* 
*             1.Date  : 2007XXXX
*             Author  : Scottxu，
*             Modification  :Scottxu增加了一个rbtreee的代码库，这小子很聪明的说
* 
*             2.Date  : 20110401
*             Author  : Sailzeng
*             Modification  :开始对代码进行一次整理，改了一些文件名称,类的名称
*             同时开始在考虑是否提供一些备份恢复的功能需求，以及是否需要提供，当然现在
*             还没有呀。
* 
*             3.Date  : 20110412
*             Author  : Sailzeng
*             Modification  :增加了一个新的HASH ，REHASH解决冲突的方式，用于某些情
*             况下，可以直接备份数据或者共享内存(MMAP).所以我成为SAFE，当然它也不是没
*             有缺点的，我现在急于在一台机器上用最快速的方法实现有存储恢复数据的功能,
*             这个实现要赞颂即时通讯的几个同事,基本思路来自他们，当然我的改动也不小喔
* 
*             4.Date  : 20110412
*             Author  : Sailzeng
*             Modification  :准备用placement new改写原来的赋值函数，同时增加析构调用,
*             这样做的目的是，让这个代码更像C++的代码,
*             原来是不支持带虚表的数据的，现在你可以放入了，
*             【注】如果有虚表，最好还是不要共享，而且在恢复的时候你要重新处理一下。
* 
* @note       如果数据放在共享内存，特别是当你在多个进程间共享的时候，不是所有的结构都合适
*             放入这些容器，最好还是POD结构，或者没有虚表的结构，注意一下几点
*             第一，虚表的指针不可能在多进程间共享。
*             第二，最好不要有指针数据，除非你自己能确保他们安全，
* 
*/

#ifndef ZCE_LIB_SHARE_MEM_PRE_DEFINE_H_
#define ZCE_LIB_SHARE_MEM_PRE_DEFINE_H_

#include "zce_boost_non_copyable.h"

namespace ZCE_LIB
{

//=============================================================================================
#define SHM_INDEX_T_LENGTH 32

//---------------------------------------------------------------------------------------------
//考虑到实际情况,增加了很多100万以下的质数,
//为什么不用静态数值呢，好像在某些编译器上会出现问题，不记得是VC++，还是GCC了，当时忘记写日志的后果
#define __MMAP_PRIME_LIST_SIZE  70

#define __MMAP_PRIME_LIST_BODY {          \
        53ul,          97ul,          193ul,         389ul,         769ul,       \
        1543ul,        3079ul,        6151ul,        12289ul,       21101ul,     \
        31957ul,       42953ul,       53657ul,       63761ul,       73009ul,     \
        83207ul,       93199ul,       101051ul,      111187ul,      120851ul,    \
        130699ul,      141283ul,      150383ul,      161503ul,      170899ul,    \
        181639ul,      191657ul,      203431ul,      252817ul,      310823ul,    \
        408869ul,      510989ul,      603881ul,      710531ul,      803171ul,    \
        909613ul,      1008853ul,     1220027ul,     1572869ul,     1820009ul,   \
        2120009ul,     3145739ul,     4220039ul,     4620001ul,     5120029ul,   \
        6291469ul,     7320011ul,     8120023ul,     9320009ul,     12582917ul,  \
        21200021ul,    31200007ul,    40200071ul,    50331653ul,    65200013ul,  \
        74200013ul,    83200009ul,    90200017ul,    100663319ul,   201326611ul, \
        312000019ul,   402653189ul,   512000009ul,   622000003ul,   732000011ul, \
        805306457ul,   922000007ul,   1610612741ul,  3221225473ul,  4294967291ul,\
    };

//=============================================================================================
//总队列行数是34行，基本是采用*2的想上递增
static const size_t NUM_HASH_SAFE_PRIMES_LIST = 34;

//目前使用24列，列越多，冲突可能会越小
#define DEFINE_PRIMES_LIST_ELEMENT 24

#if defined (DEFINE_PRIMES_LIST_ELEMENT)

//每行是16,24,32列
static const size_t NUM_PRIMES_LIST_ELEMENT = DEFINE_PRIMES_LIST_ELEMENT;

#if DEFINE_PRIMES_LIST_ELEMENT == 16

//目前维度是10个HASH数字，最后一个是前面10个HASH数字的和,
#define __HASH_SAFE_PRIME_LIST_BODY {          \
        { 751ul,757ul,761ul,769ul,773ul,787ul,797ul,809ul,811ul,821ul,823ul,827ul,829ul,839ul,853ul,857ul,12864ul,},\
        { 1381ul,1399ul,1409ul,1423ul,1427ul,1429ul,1433ul,1439ul,1447ul,1451ul,1453ul,1459ul,1471ul,1481ul,1483ul,1487ul,23072ul,},\
        { 2633ul,2647ul,2657ul,2659ul,2663ul,2671ul,2677ul,2683ul,2687ul,2689ul,2693ul,2699ul,2707ul,2711ul,2713ul,2719ul,42908ul,},\
        { 5147ul,5153ul,5167ul,5171ul,5179ul,5189ul,5197ul,5209ul,5227ul,5231ul,5233ul,5237ul,5261ul,5273ul,5279ul,5281ul,83434ul,},\
        { 7507ul,7517ul,7523ul,7529ul,7537ul,7541ul,7547ul,7549ul,7559ul,7561ul,7573ul,7577ul,7583ul,7589ul,7591ul,7603ul,120886ul,},\
        { 13751ul,13757ul,13759ul,13763ul,13781ul,13789ul,13799ul,13807ul,13829ul,13831ul,13841ul,13859ul,13873ul,13877ul,13879ul,13883ul,221078ul,},\
        { 26251ul,26261ul,26263ul,26267ul,26293ul,26297ul,26309ul,26317ul,26321ul,26339ul,26347ul,26357ul,26371ul,26387ul,26393ul,26399ul,421172ul,},\
        { 38767ul,38783ul,38791ul,38803ul,38821ul,38833ul,38839ul,38851ul,38861ul,38867ul,38873ul,38891ul,38903ul,38917ul,38921ul,38923ul,621644ul,},\
        { 51257ul,51263ul,51283ul,51287ul,51307ul,51329ul,51341ul,51343ul,51347ul,51349ul,51361ul,51383ul,51407ul,51413ul,51419ul,51421ul,821510ul,},\
        { 75011ul,75013ul,75017ul,75029ul,75037ul,75041ul,75079ul,75083ul,75109ul,75133ul,75149ul,75161ul,75167ul,75169ul,75181ul,75193ul,1201572ul,},\
        { 137507ul,137519ul,137537ul,137567ul,137573ul,137587ul,137593ul,137597ul,137623ul,137633ul,137639ul,137653ul,137659ul,137699ul,137707ul,137713ul,2201806ul,},\
        { 262501ul,262511ul,262513ul,262519ul,262541ul,262543ul,262553ul,262567ul,262583ul,262597ul,262621ul,262627ul,262643ul,262649ul,262651ul,262657ul,4201276ul,},\
        { 387503ul,387509ul,387529ul,387551ul,387577ul,387587ul,387613ul,387623ul,387631ul,387641ul,387659ul,387677ul,387679ul,387683ul,387707ul,387721ul,6201890ul,},\
        { 512503ul,512507ul,512521ul,512531ul,512537ul,512543ul,512569ul,512573ul,512579ul,512581ul,512591ul,512593ul,512597ul,512609ul,512621ul,512641ul,8201096ul,},\
        { 750019ul,750037ul,750059ul,750077ul,750083ul,750097ul,750119ul,750121ul,750131ul,750133ul,750137ul,750151ul,750157ul,750161ul,750163ul,750173ul,12001818ul,},\
        { 1375007ul,1375013ul,1375019ul,1375021ul,1375037ul,1375039ul,1375043ul,1375051ul,1375063ul,1375091ul,1375103ul,1375109ul,1375111ul,1375117ul,1375133ul,1375141ul,22001098ul,},\
        { 2625001ul,2625011ul,2625017ul,2625023ul,2625061ul,2625067ul,2625071ul,2625079ul,2625137ul,2625149ul,2625163ul,2625169ul,2625223ul,2625229ul,2625241ul,2625247ul,42001888ul,},\
        { 3875041ul,3875051ul,3875057ul,3875087ul,3875089ul,3875101ul,3875141ul,3875143ul,3875159ul,3875161ul,3875173ul,3875177ul,3875239ul,3875243ul,3875273ul,3875281ul,62002416ul,},\
        { 5125009ul,5125019ul,5125027ul,5125039ul,5125049ul,5125051ul,5125061ul,5125073ul,5125093ul,5125139ul,5125151ul,5125157ul,5125163ul,5125171ul,5125187ul,5125201ul,82001590ul,},\
        { 7500013ul,7500029ul,7500049ul,7500061ul,7500071ul,7500091ul,7500113ul,7500121ul,7500127ul,7500169ul,7500197ul,7500203ul,7500217ul,7500221ul,7500223ul,7500271ul,120002176ul,},\
        { 13750043ul,13750049ul,13750057ul,13750069ul,13750097ul,13750111ul,13750117ul,13750123ul,13750133ul,13750141ul,13750151ul,13750157ul,13750169ul,13750181ul,13750201ul,13750259ul,220002058ul,},\
        { 26250031ul,26250067ul,26250071ul,26250079ul,26250089ul,26250097ul,26250101ul,26250121ul,26250137ul,26250151ul,26250157ul,26250179ul,26250187ul,26250197ul,26250223ul,26250241ul,420002128ul,},\
        { 38750011ul,38750051ul,38750059ul,38750069ul,38750071ul,38750077ul,38750081ul,38750083ul,38750087ul,38750143ul,38750161ul,38750171ul,38750183ul,38750209ul,38750219ul,38750233ul,620001908ul,},\
        { 51250007ul,51250013ul,51250057ul,51250061ul,51250081ul,51250091ul,51250097ul,51250117ul,51250139ul,51250151ul,51250153ul,51250159ul,51250181ul,51250183ul,51250247ul,51250253ul,820001990ul,},\
        { 75000007ul,75000017ul,75000031ul,75000047ul,75000071ul,75000083ul,75000097ul,75000103ul,75000113ul,75000143ul,75000157ul,75000169ul,75000173ul,75000179ul,75000181ul,75000187ul,1200001758ul,},\
        { 87500029ul,87500053ul,87500059ul,87500069ul,87500087ul,87500093ul,87500099ul,87500117ul,87500131ul,87500137ul,87500159ul,87500183ul,87500201ul,87500243ul,87500249ul,87500267ul,1400002176ul,},\
        { 112500071ul,112500097ul,112500127ul,112500137ul,112500151ul,112500161ul,112500181ul,112500211ul,112500221ul,112500229ul,112500233ul,112500253ul,112500257ul,112500259ul,112500277ul,112500319ul,1800003184ul,},\
        { 137500007ul,137500009ul,137500037ul,137500123ul,137500127ul,137500133ul,137500163ul,137500171ul,137500189ul,137500193ul,137500201ul,137500213ul,137500217ul,137500229ul,137500247ul,137500249ul,2200002508ul,},\
        { 150000001ul,150000029ul,150000047ul,150000083ul,150000091ul,150000107ul,150000113ul,150000139ul,150000143ul,150000157ul,150000167ul,150000187ul,150000199ul,150000271ul,150000283ul,150000317ul,2400002334ul,},\
        { 175000039ul,175000043ul,175000079ul,175000093ul,175000109ul,175000141ul,175000157ul,175000171ul,175000183ul,175000187ul,175000201ul,175000213ul,175000219ul,175000229ul,175000283ul,175000291ul,2800002638ul,},\
        { 200000033ul,200000039ul,200000051ul,200000069ul,200000081ul,200000083ul,200000089ul,200000093ul,200000107ul,200000117ul,200000123ul,200000131ul,200000161ul,200000183ul,200000201ul,200000209ul,3200001770ul,},\
        { 212500039ul,212500087ul,212500091ul,212500097ul,212500111ul,212500117ul,212500129ul,212500147ul,212500159ul,212500177ul,212500217ul,212500219ul,212500247ul,212500259ul,212500291ul,212500307ul,3400002694ul,},\
        { 237500069ul,237500099ul,237500117ul,237500119ul,237500141ul,237500147ul,237500161ul,237500173ul,237500177ul,237500191ul,237500201ul,237500213ul,237500257ul,237500293ul,237500297ul,237500321ul,3800002976ul,},\
        { 262500011ul,262500031ul,262500047ul,262500113ul,262500167ul,262500169ul,262500187ul,262500191ul,262500209ul,262500221ul,262500223ul,262500269ul,262500307ul,262500317ul,262500323ul,262500353ul,4200003138ul,},\
    };

#elif DEFINE_PRIMES_LIST_ELEMENT == 24

#define __HASH_SAFE_PRIME_LIST_BODY { \
        { 503ul,509ul,521ul,523ul,541ul,547ul,557ul,563ul,569ul,571ul,577ul,587ul,593ul,599ul,601ul,607ul,613ul,617ul,619ul,631ul,641ul,643ul,647ul,653ul,14032ul,},\
        { 919ul,929ul,937ul,941ul,947ul,953ul,967ul,971ul,977ul,983ul,991ul,997ul,1009ul,1013ul,1019ul,1021ul,1031ul,1033ul,1039ul,1049ul,1051ul,1061ul,1063ul,1069ul,23970ul,},\
        { 1753ul,1759ul,1777ul,1783ul,1787ul,1789ul,1801ul,1811ul,1823ul,1831ul,1847ul,1861ul,1867ul,1871ul,1873ul,1877ul,1879ul,1889ul,1901ul,1907ul,1913ul,1931ul,1933ul,1949ul,44412ul,},\
        { 3433ul,3449ul,3457ul,3461ul,3463ul,3467ul,3469ul,3491ul,3499ul,3511ul,3517ul,3527ul,3529ul,3533ul,3539ul,3541ul,3547ul,3557ul,3559ul,3571ul,3581ul,3583ul,3593ul,3607ul,84484ul,},\
        { 5003ul,5009ul,5011ul,5021ul,5023ul,5039ul,5051ul,5059ul,5077ul,5081ul,5087ul,5099ul,5101ul,5107ul,5113ul,5119ul,5147ul,5153ul,5167ul,5171ul,5179ul,5189ul,5197ul,5209ul,122412ul,},\
        { 9173ul,9181ul,9187ul,9199ul,9203ul,9209ul,9221ul,9227ul,9239ul,9241ul,9257ul,9277ul,9281ul,9283ul,9293ul,9311ul,9319ul,9323ul,9337ul,9341ul,9343ul,9349ul,9371ul,9377ul,222542ul,},\
        { 17509ul,17519ul,17539ul,17551ul,17569ul,17573ul,17579ul,17581ul,17597ul,17599ul,17609ul,17623ul,17627ul,17657ul,17659ul,17669ul,17681ul,17683ul,17707ul,17713ul,17729ul,17737ul,17747ul,17749ul,423206ul,},\
        { 25841ul,25847ul,25849ul,25867ul,25873ul,25889ul,25903ul,25913ul,25919ul,25931ul,25933ul,25939ul,25943ul,25951ul,25969ul,25981ul,25997ul,25999ul,26003ul,26017ul,26021ul,26029ul,26041ul,26053ul,622708ul,},\
        { 34171ul,34183ul,34211ul,34213ul,34217ul,34231ul,34253ul,34259ul,34261ul,34267ul,34273ul,34283ul,34297ul,34301ul,34303ul,34313ul,34319ul,34327ul,34337ul,34351ul,34361ul,34367ul,34369ul,34381ul,822848ul,},\
        { 50021ul,50023ul,50033ul,50047ul,50051ul,50053ul,50069ul,50077ul,50087ul,50093ul,50101ul,50111ul,50119ul,50123ul,50129ul,50131ul,50147ul,50153ul,50159ul,50177ul,50207ul,50221ul,50227ul,50231ul,1202790ul,},\
        { 91673ul,91691ul,91703ul,91711ul,91733ul,91753ul,91757ul,91771ul,91781ul,91801ul,91807ul,91811ul,91813ul,91823ul,91837ul,91841ul,91867ul,91873ul,91909ul,91921ul,91939ul,91943ul,91951ul,91957ul,2203666ul,},\
        { 175003ul,175013ul,175039ul,175061ul,175067ul,175069ul,175079ul,175081ul,175103ul,175129ul,175141ul,175211ul,175229ul,175261ul,175267ul,175277ul,175291ul,175303ul,175309ul,175327ul,175333ul,175349ul,175361ul,175391ul,4204694ul,},\
        { 258337ul,258353ul,258373ul,258389ul,258403ul,258407ul,258413ul,258421ul,258437ul,258443ul,258449ul,258469ul,258487ul,258491ul,258499ul,258521ul,258527ul,258539ul,258551ul,258563ul,258569ul,258581ul,258607ul,258611ul,6203440ul,},\
        { 341681ul,341687ul,341701ul,341729ul,341743ul,341749ul,341771ul,341773ul,341777ul,341813ul,341821ul,341827ul,341839ul,341851ul,341863ul,341879ul,341911ul,341927ul,341947ul,341951ul,341953ul,341959ul,341963ul,341983ul,8204098ul,},\
        { 500009ul,500029ul,500041ul,500057ul,500069ul,500083ul,500107ul,500111ul,500113ul,500119ul,500153ul,500167ul,500173ul,500177ul,500179ul,500197ul,500209ul,500231ul,500233ul,500237ul,500239ul,500249ul,500257ul,500287ul,12003726ul,},\
        { 916679ul,916703ul,916733ul,916771ul,916781ul,916787ul,916831ul,916837ul,916841ul,916859ul,916871ul,916879ul,916907ul,916913ul,916931ul,916933ul,916939ul,916961ul,916973ul,916999ul,917003ul,917039ul,917041ul,917051ul,22005262ul,},\
        { 1750009ul,1750013ul,1750037ul,1750061ul,1750069ul,1750081ul,1750103ul,1750123ul,1750127ul,1750129ul,1750141ul,1750153ul,1750159ul,1750169ul,1750181ul,1750183ul,1750193ul,1750253ul,1750267ul,1750271ul,1750283ul,1750289ul,1750297ul,1750319ul,42003910ul,},\
        { 2583341ul,2583353ul,2583359ul,2583389ul,2583391ul,2583419ul,2583431ul,2583437ul,2583457ul,2583461ul,2583463ul,2583467ul,2583491ul,2583499ul,2583517ul,2583527ul,2583547ul,2583557ul,2583577ul,2583589ul,2583611ul,2583629ul,2583631ul,2583661ul,62003804ul,},\
        { 3416683ul,3416701ul,3416717ul,3416731ul,3416741ul,3416747ul,3416753ul,3416761ul,3416767ul,3416773ul,3416783ul,3416797ul,3416837ul,3416887ul,3416891ul,3416893ul,3416929ul,3416939ul,3416951ul,3416953ul,3416971ul,3416993ul,3416999ul,3417013ul,82004210ul,},\
        { 5000011ul,5000077ul,5000081ul,5000087ul,5000101ul,5000111ul,5000113ul,5000153ul,5000161ul,5000167ul,5000197ul,5000201ul,5000213ul,5000251ul,5000257ul,5000263ul,5000299ul,5000311ul,5000321ul,5000339ul,5000381ul,5000389ul,5000399ul,5000423ul,120005306ul,},\
        { 9166667ul,9166681ul,9166687ul,9166693ul,9166709ul,9166727ul,9166747ul,9166753ul,9166763ul,9166777ul,9166789ul,9166819ul,9166823ul,9166837ul,9166841ul,9166847ul,9166849ul,9166853ul,9166867ul,9166879ul,9166891ul,9166909ul,9166931ul,9166943ul,220003282ul,},\
        { 17500013ul,17500031ul,17500037ul,17500081ul,17500099ul,17500127ul,17500139ul,17500141ul,17500163ul,17500181ul,17500187ul,17500193ul,17500207ul,17500237ul,17500261ul,17500267ul,17500271ul,17500279ul,17500289ul,17500303ul,17500313ul,17500321ul,17500331ul,17500339ul,420004810ul,},\
        { 25833343ul,25833349ul,25833359ul,25833361ul,25833373ul,25833377ul,25833389ul,25833413ul,25833433ul,25833443ul,25833449ul,25833473ul,25833481ul,25833491ul,25833527ul,25833529ul,25833539ul,25833541ul,25833547ul,25833551ul,25833569ul,25833581ul,25833589ul,25833601ul,620003308ul,},\
        { 34166687ul,34166689ul,34166729ul,34166747ul,34166749ul,34166761ul,34166773ul,34166777ul,34166779ul,34166801ul,34166809ul,34166831ul,34166857ul,34166861ul,34166879ul,34166903ul,34166911ul,34166933ul,34166939ul,34166953ul,34166963ul,34166971ul,34166999ul,34167061ul,820004362ul,},\
        { 50000017ul,50000021ul,50000047ul,50000059ul,50000063ul,50000101ul,50000131ul,50000141ul,50000161ul,50000201ul,50000207ul,50000221ul,50000231ul,50000233ul,50000239ul,50000243ul,50000257ul,50000273ul,50000309ul,50000311ul,50000329ul,50000341ul,50000347ul,50000387ul,1200004870ul,},\
        { 58333333ul,58333343ul,58333357ul,58333361ul,58333381ul,58333391ul,58333403ul,58333411ul,58333427ul,58333433ul,58333441ul,58333453ul,58333469ul,58333481ul,58333489ul,58333493ul,58333519ul,58333547ul,58333559ul,58333577ul,58333607ul,58333609ul,58333669ul,58333687ul,1400003440ul,},\
        { 75000007ul,75000017ul,75000031ul,75000047ul,75000071ul,75000083ul,75000097ul,75000103ul,75000113ul,75000143ul,75000157ul,75000169ul,75000173ul,75000179ul,75000181ul,75000187ul,75000197ul,75000227ul,75000241ul,75000257ul,75000271ul,75000283ul,75000287ul,75000301ul,1800003822ul,},\
        { 91666667ul,91666727ul,91666739ul,91666741ul,91666789ul,91666829ul,91666859ul,91666901ul,91666909ul,91666931ul,91666933ul,91666951ul,91666961ul,91666973ul,91666979ul,91666987ul,91667003ul,91667011ul,91667041ul,91667047ul,91667053ul,91667071ul,91667083ul,91667123ul,2200006308ul,},\
        { 100000007ul,100000037ul,100000039ul,100000049ul,100000073ul,100000081ul,100000123ul,100000127ul,100000193ul,100000213ul,100000217ul,100000223ul,100000231ul,100000237ul,100000259ul,100000267ul,100000279ul,100000357ul,100000379ul,100000393ul,100000399ul,100000421ul,100000429ul,100000463ul,2400005496ul,},\
        { 116666713ul,116666717ul,116666723ul,116666789ul,116666791ul,116666827ul,116666863ul,116666867ul,116666873ul,116666881ul,116666887ul,116666911ul,116666917ul,116666923ul,116666933ul,116666941ul,116666947ul,116666969ul,116666983ul,116667007ul,116667037ul,116667077ul,116667091ul,116667119ul,2800005786ul,},\
        { 133333357ul,133333379ul,133333391ul,133333439ul,133333457ul,133333463ul,133333489ul,133333513ul,133333523ul,133333537ul,133333547ul,133333549ul,133333589ul,133333597ul,133333609ul,133333667ul,133333679ul,133333727ul,133333777ul,133333787ul,133333789ul,133333801ul,133333807ul,133333813ul,3200006286ul,},\
        { 141666677ul,141666689ul,141666691ul,141666697ul,141666703ul,141666731ul,141666751ul,141666761ul,141666787ul,141666817ul,141666853ul,141666859ul,141666871ul,141666887ul,141666901ul,141666919ul,141666923ul,141666929ul,141666947ul,141666979ul,141666991ul,141667003ul,141667027ul,141667033ul,3400004426ul,},\
        { 158333333ul,158333339ul,158333341ul,158333381ul,158333389ul,158333411ul,158333443ul,158333467ul,158333531ul,158333573ul,158333641ul,158333653ul,158333701ul,158333713ul,158333717ul,158333729ul,158333731ul,158333789ul,158333803ul,158333809ul,158333827ul,158333839ul,158333849ul,158333891ul,3800006900ul,},\
        { 175000039ul,175000043ul,175000079ul,175000093ul,175000109ul,175000141ul,175000157ul,175000171ul,175000183ul,175000187ul,175000201ul,175000213ul,175000219ul,175000229ul,175000283ul,175000291ul,175000333ul,175000349ul,175000361ul,175000369ul,175000387ul,175000391ul,175000409ul,175000439ul,4200005676ul,},\
    };

#elif DEFINE_PRIMES_LIST_ELEMENT == 32

#define __HASH_SAFE_PRIME_LIST_BODY { \
        { 379ul,383ul,389ul,397ul,401ul,409ul,419ul,421ul,431ul,433ul,439ul,443ul,449ul,457ul,461ul,463ul,467ul,479ul,487ul,491ul,499ul,503ul,509ul,521ul,523ul,541ul,547ul,557ul,563ul,569ul,571ul,577ul,15178ul,},\
        { 691ul,701ul,709ul,719ul,727ul,733ul,739ul,743ul,751ul,757ul,761ul,769ul,773ul,787ul,797ul,809ul,811ul,821ul,823ul,827ul,829ul,839ul,853ul,857ul,859ul,863ul,877ul,881ul,883ul,887ul,907ul,911ul,25694ul,},\
        { 1319ul,1321ul,1327ul,1361ul,1367ul,1373ul,1381ul,1399ul,1409ul,1423ul,1427ul,1429ul,1433ul,1439ul,1447ul,1451ul,1453ul,1459ul,1471ul,1481ul,1483ul,1487ul,1489ul,1493ul,1499ul,1511ul,1523ul,1531ul,1543ul,1549ul,1553ul,1559ul,46390ul,},\
        { 2579ul,2591ul,2593ul,2609ul,2617ul,2621ul,2633ul,2647ul,2657ul,2659ul,2663ul,2671ul,2677ul,2683ul,2687ul,2689ul,2693ul,2699ul,2707ul,2711ul,2713ul,2719ul,2729ul,2731ul,2741ul,2749ul,2753ul,2767ul,2777ul,2789ul,2791ul,2797ul,86142ul,},\
        { 3761ul,3767ul,3769ul,3779ul,3793ul,3797ul,3803ul,3821ul,3823ul,3833ul,3847ul,3851ul,3853ul,3863ul,3877ul,3881ul,3889ul,3907ul,3911ul,3917ul,3919ul,3923ul,3929ul,3931ul,3943ul,3947ul,3967ul,3989ul,4001ul,4003ul,4007ul,4013ul,124314ul,},\
        { 6883ul,6899ul,6907ul,6911ul,6917ul,6947ul,6949ul,6959ul,6961ul,6967ul,6971ul,6977ul,6983ul,6991ul,6997ul,7001ul,7013ul,7019ul,7027ul,7039ul,7043ul,7057ul,7069ul,7079ul,7103ul,7109ul,7121ul,7127ul,7129ul,7151ul,7159ul,7177ul,224642ul,},\
        { 13127ul,13147ul,13151ul,13159ul,13163ul,13171ul,13177ul,13183ul,13187ul,13217ul,13219ul,13229ul,13241ul,13249ul,13259ul,13267ul,13291ul,13297ul,13309ul,13313ul,13327ul,13331ul,13337ul,13339ul,13367ul,13381ul,13397ul,13399ul,13411ul,13417ul,13421ul,13441ul,424924ul,},\
        { 19379ul,19381ul,19387ul,19391ul,19403ul,19417ul,19421ul,19423ul,19427ul,19429ul,19433ul,19441ul,19447ul,19457ul,19463ul,19469ul,19471ul,19477ul,19483ul,19489ul,19501ul,19507ul,19531ul,19541ul,19543ul,19553ul,19559ul,19571ul,19577ul,19583ul,19597ul,19603ul,623354ul,},\
        { 25633ul,25639ul,25643ul,25657ul,25667ul,25673ul,25679ul,25693ul,25703ul,25717ul,25733ul,25741ul,25747ul,25759ul,25763ul,25771ul,25793ul,25799ul,25801ul,25819ul,25841ul,25847ul,25849ul,25867ul,25873ul,25889ul,25903ul,25913ul,25919ul,25931ul,25933ul,25939ul,825134ul,},\
        { 37501ul,37507ul,37511ul,37517ul,37529ul,37537ul,37547ul,37549ul,37561ul,37567ul,37571ul,37573ul,37579ul,37589ul,37591ul,37607ul,37619ul,37633ul,37643ul,37649ul,37657ul,37663ul,37691ul,37693ul,37699ul,37717ul,37747ul,37781ul,37783ul,37799ul,37811ul,37813ul,1204234ul,},\
        { 68767ul,68771ul,68777ul,68791ul,68813ul,68819ul,68821ul,68863ul,68879ul,68881ul,68891ul,68897ul,68899ul,68903ul,68909ul,68917ul,68927ul,68947ul,68963ul,68993ul,69001ul,69011ul,69019ul,69029ul,69031ul,69061ul,69067ul,69073ul,69109ul,69119ul,69127ul,69143ul,2206218ul,},\
        { 131251ul,131267ul,131293ul,131297ul,131303ul,131311ul,131317ul,131321ul,131357ul,131363ul,131371ul,131381ul,131413ul,131431ul,131437ul,131441ul,131447ul,131449ul,131477ul,131479ul,131489ul,131497ul,131501ul,131507ul,131519ul,131543ul,131561ul,131581ul,131591ul,131611ul,131617ul,131627ul,4206050ul,},\
        { 193751ul,193757ul,193763ul,193771ul,193789ul,193793ul,193799ul,193811ul,193813ul,193841ul,193847ul,193859ul,193861ul,193871ul,193873ul,193877ul,193883ul,193891ul,193937ul,193939ul,193943ul,193951ul,193957ul,193979ul,193993ul,194003ul,194017ul,194027ul,194057ul,194069ul,194071ul,194083ul,6204876ul,},\
        { 256279ul,256301ul,256307ul,256313ul,256337ul,256349ul,256363ul,256369ul,256391ul,256393ul,256423ul,256441ul,256469ul,256471ul,256483ul,256489ul,256493ul,256499ul,256517ul,256541ul,256561ul,256567ul,256577ul,256579ul,256589ul,256603ul,256609ul,256639ul,256643ul,256651ul,256661ul,256687ul,8207594ul,},\
        { 375017ul,375019ul,375029ul,375043ul,375049ul,375059ul,375083ul,375091ul,375097ul,375101ul,375103ul,375113ul,375119ul,375121ul,375127ul,375149ul,375157ul,375163ul,375169ul,375203ul,375209ul,375223ul,375227ul,375233ul,375247ul,375251ul,375253ul,375257ul,375259ul,375281ul,375283ul,375311ul,12005046ul,},\
        { 687517ul,687521ul,687523ul,687541ul,687551ul,687559ul,687581ul,687593ul,687623ul,687637ul,687641ul,687647ul,687679ul,687683ul,687691ul,687707ul,687721ul,687737ul,687749ul,687767ul,687773ul,687779ul,687787ul,687809ul,687823ul,687829ul,687839ul,687847ul,687893ul,687901ul,687917ul,687923ul,22006788ul,},\
        { 1312513ul,1312517ul,1312523ul,1312543ul,1312547ul,1312559ul,1312561ul,1312567ul,1312579ul,1312583ul,1312601ul,1312603ul,1312637ul,1312657ul,1312667ul,1312669ul,1312673ul,1312681ul,1312733ul,1312739ul,1312769ul,1312777ul,1312789ul,1312813ul,1312823ul,1312841ul,1312847ul,1312853ul,1312867ul,1312873ul,1312877ul,1312889ul,42006170ul,},\
        { 1937513ul,1937539ul,1937549ul,1937557ul,1937587ul,1937603ul,1937629ul,1937641ul,1937651ul,1937657ul,1937659ul,1937699ul,1937713ul,1937723ul,1937729ul,1937731ul,1937759ul,1937777ul,1937807ul,1937833ul,1937843ul,1937879ul,1937891ul,1937917ul,1937927ul,1937933ul,1937939ul,1937941ul,1937953ul,1937959ul,1937987ul,1937989ul,62008514ul,},\
        { 2562503ul,2562517ul,2562533ul,2562551ul,2562557ul,2562559ul,2562589ul,2562601ul,2562611ul,2562613ul,2562619ul,2562629ul,2562641ul,2562661ul,2562667ul,2562689ul,2562691ul,2562713ul,2562719ul,2562737ul,2562751ul,2562803ul,2562809ul,2562827ul,2562841ul,2562881ul,2562907ul,2562941ul,2562943ul,2562947ul,2562977ul,2562979ul,82007006ul,},\
        { 3750001ul,3750017ul,3750031ul,3750037ul,3750041ul,3750067ul,3750079ul,3750113ul,3750119ul,3750151ul,3750157ul,3750167ul,3750169ul,3750199ul,3750203ul,3750211ul,3750221ul,3750223ul,3750233ul,3750247ul,3750269ul,3750293ul,3750301ul,3750317ul,3750323ul,3750337ul,3750347ul,3750361ul,3750379ul,3750389ul,3750407ul,3750419ul,120006828ul,},\
        { 6875023ul,6875027ul,6875041ul,6875047ul,6875053ul,6875101ul,6875119ul,6875129ul,6875153ul,6875159ul,6875189ul,6875203ul,6875221ul,6875237ul,6875269ul,6875279ul,6875299ul,6875311ul,6875333ul,6875383ul,6875387ul,6875389ul,6875419ul,6875423ul,6875431ul,6875441ul,6875443ul,6875461ul,6875467ul,6875513ul,6875543ul,6875567ul,220009060ul,},\
        { 13125001ul,13125053ul,13125061ul,13125083ul,13125089ul,13125103ul,13125107ul,13125109ul,13125113ul,13125127ul,13125169ul,13125179ul,13125193ul,13125209ul,13125223ul,13125251ul,13125271ul,13125293ul,13125311ul,13125319ul,13125347ul,13125349ul,13125383ul,13125389ul,13125401ul,13125403ul,13125407ul,13125419ul,13125421ul,13125439ul,13125451ul,13125457ul,420008130ul,},\
        { 19375007ul,19375043ul,19375061ul,19375067ul,19375073ul,19375099ul,19375123ul,19375151ul,19375171ul,19375199ul,19375201ul,19375207ul,19375229ul,19375243ul,19375267ul,19375273ul,19375283ul,19375289ul,19375297ul,19375313ul,19375331ul,19375333ul,19375337ul,19375373ul,19375379ul,19375387ul,19375397ul,19375399ul,19375409ul,19375417ul,19375483ul,19375511ul,620008352ul,},\
        { 25625029ul,25625051ul,25625071ul,25625081ul,25625087ul,25625099ul,25625101ul,25625111ul,25625113ul,25625161ul,25625177ul,25625179ul,25625191ul,25625203ul,25625221ul,25625227ul,25625231ul,25625261ul,25625269ul,25625297ul,25625311ul,25625321ul,25625339ul,25625351ul,25625371ul,25625389ul,25625401ul,25625407ul,25625419ul,25625441ul,25625449ul,25625459ul,820007818ul,},\
        { 37500007ul,37500013ul,37500019ul,37500037ul,37500041ul,37500059ul,37500077ul,37500083ul,37500109ul,37500119ul,37500131ul,37500139ul,37500163ul,37500187ul,37500227ul,37500241ul,37500259ul,37500263ul,37500271ul,37500289ul,37500347ul,37500361ul,37500371ul,37500383ul,37500389ul,37500409ul,37500443ul,37500457ul,37500473ul,37500481ul,37500493ul,37500517ul,1200007858ul,},\
        { 43750013ul,43750033ul,43750037ul,43750051ul,43750079ul,43750087ul,43750099ul,43750123ul,43750127ul,43750151ul,43750153ul,43750171ul,43750181ul,43750193ul,43750229ul,43750247ul,43750277ul,43750309ul,43750337ul,43750339ul,43750411ul,43750451ul,43750459ul,43750471ul,43750477ul,43750523ul,43750541ul,43750543ul,43750573ul,43750583ul,43750601ul,43750607ul,1400009476ul,},\
        { 56250011ul,56250017ul,56250037ul,56250041ul,56250049ul,56250071ul,56250079ul,56250091ul,56250107ul,56250143ul,56250163ul,56250191ul,56250199ul,56250217ul,56250253ul,56250269ul,56250277ul,56250281ul,56250287ul,56250289ul,56250349ul,56250353ul,56250367ul,56250371ul,56250377ul,56250379ul,56250391ul,56250409ul,56250413ul,56250427ul,56250451ul,56250487ul,1800007846ul,},\
        { 68750021ul,68750029ul,68750051ul,68750089ul,68750093ul,68750117ul,68750147ul,68750161ul,68750167ul,68750179ul,68750251ul,68750273ul,68750309ul,68750347ul,68750369ul,68750371ul,68750413ul,68750419ul,68750447ul,68750449ul,68750471ul,68750491ul,68750527ul,68750579ul,68750621ul,68750659ul,68750687ul,68750701ul,68750711ul,68750713ul,68750729ul,68750741ul,2200012332ul,},\
        { 75000007ul,75000017ul,75000031ul,75000047ul,75000071ul,75000083ul,75000097ul,75000103ul,75000113ul,75000143ul,75000157ul,75000169ul,75000173ul,75000179ul,75000181ul,75000187ul,75000197ul,75000227ul,75000241ul,75000257ul,75000271ul,75000283ul,75000287ul,75000301ul,75000307ul,75000319ul,75000323ul,75000337ul,75000347ul,75000349ul,75000421ul,75000437ul,2400006662ul,},\
        { 87500029ul,87500053ul,87500059ul,87500069ul,87500087ul,87500093ul,87500099ul,87500117ul,87500131ul,87500137ul,87500159ul,87500183ul,87500201ul,87500243ul,87500249ul,87500267ul,87500269ul,87500299ul,87500311ul,87500351ul,87500381ul,87500401ul,87500407ul,87500429ul,87500431ul,87500447ul,87500461ul,87500467ul,87500473ul,87500477ul,87500489ul,87500503ul,2800008772ul,},\
        { 100000007ul,100000037ul,100000039ul,100000049ul,100000073ul,100000081ul,100000123ul,100000127ul,100000193ul,100000213ul,100000217ul,100000223ul,100000231ul,100000237ul,100000259ul,100000267ul,100000279ul,100000357ul,100000379ul,100000393ul,100000399ul,100000421ul,100000429ul,100000463ul,100000469ul,100000471ul,100000493ul,100000541ul,100000543ul,100000561ul,100000567ul,100000577ul,3200009718ul,},\
        { 106250047ul,106250099ul,106250101ul,106250129ul,106250143ul,106250149ul,106250161ul,106250173ul,106250191ul,106250197ul,106250201ul,106250267ul,106250269ul,106250281ul,106250321ul,106250329ul,106250341ul,106250383ul,106250387ul,106250401ul,106250407ul,106250447ul,106250453ul,106250467ul,106250477ul,106250483ul,106250491ul,106250513ul,106250539ul,106250567ul,106250581ul,106250587ul,3400010582ul,},\
        { 118750003ul,118750007ul,118750031ul,118750033ul,118750061ul,118750069ul,118750091ul,118750097ul,118750123ul,118750129ul,118750147ul,118750183ul,118750189ul,118750199ul,118750201ul,118750223ul,118750237ul,118750241ul,118750249ul,118750271ul,118750277ul,118750301ul,118750337ul,118750339ul,118750343ul,118750349ul,118750381ul,118750393ul,118750397ul,118750409ul,118750417ul,118750433ul,3800007160ul,},\
        { 131250011ul,131250059ul,131250071ul,131250073ul,131250089ul,131250109ul,131250113ul,131250127ul,131250173ul,131250191ul,131250193ul,131250199ul,131250227ul,131250241ul,131250283ul,131250289ul,131250293ul,131250299ul,131250331ul,131250337ul,131250349ul,131250377ul,131250439ul,131250481ul,131250533ul,131250541ul,131250547ul,131250593ul,131250599ul,131250601ul,131250619ul,131250677ul,4200010064ul,},\
    };

#else

#error "Primes list only support 16,24,32. please check you def DEFINE_PRIMES_LIST_ELEMENT."

#endif

#endif //

//=============================================================================================
//定义Hash函数的函数对象(仿函数),不是我非要当"特立独行的猪",非要抄而不用STL,hashtable还不是标准STL,
//为了能直接在.net下编译,我不得不如此,其实你可以自己定义返回size_t整数Key的函数对象

template <class keytpe> struct smem_hash {};

//这个函数其实是BKDRHash的描述，原有的STLPort中间seed 是5，BKDRHash 推荐使用131等值
inline size_t _shm_hash_string(const char *str)
{
    size_t hashval = 0;

    // 31 131 1313 13131 131313 etc..
    static const size_t BKDR_HASH_SEED = 131;
    for ( ; *str; ++str)
    {
        hashval = BKDR_HASH_SEED * hashval + *str;
    }

    return size_t(hashval);
}

template<> struct smem_hash<char *>
{
    size_t operator()(const char *str) const
    {
        return _shm_hash_string(str);
    }
};

template<> struct smem_hash<const char *>
{
    size_t operator()(const char *str) const
    {
        return _shm_hash_string(str);
    }
};

template<> struct smem_hash<std::string>
{
    size_t operator()(const std::string &str) const
    {
        return _shm_hash_string(str.c_str());
    }
};

template<> struct smem_hash<const std::string>
{
    size_t operator()(const std::string &str) const
    {
        return _shm_hash_string(str.c_str());
    }
};

template<> struct smem_hash<char>
{
    size_t operator()(char x) const
    {
        return static_cast<size_t>(x);
    }
};

template<> struct smem_hash<unsigned char>
{
    size_t operator()(unsigned char x) const
    {
        return static_cast<size_t>(x);
    }
};

template<> struct smem_hash<short>
{
    size_t operator()(short x) const
    {
        return static_cast<size_t>(x);
    }
};
template<> struct smem_hash<unsigned short>
{
    size_t operator()(unsigned short x) const
    {
        return static_cast<size_t>(x);
    }
};

template<> struct smem_hash<int>
{
    size_t operator()(int x) const
    {
        return static_cast<size_t>(x);
    }
};

template<> struct smem_hash<unsigned int>
{
    size_t operator()(unsigned int x) const
    {
        return static_cast<size_t>(x);
    }
};
template<> struct smem_hash<long>
{
    size_t operator()(long x) const
    {
        return static_cast<size_t>(x);
    }
};

template<> struct smem_hash<uint64_t>
{
    size_t operator()(uint64_t x) const
    {
#if defined (ZCE_LINUX64) || defined (ZCE_WIN64)
        // 64位系统，则直接返回
        return static_cast<size_t>(x);
#else
        // 32位操作系统, 前32位+后32位
        size_t r = (size_t)((x & 0xffffffff) + (x >> 32));
        return r;
#endif //
    }
};

//---------------------------------------------------------------------------------------------
//默认的一个淘汰函数，在自动淘汰时调用，用于完成一些不便于用析构处理的代码
template < class _value_type>
class _default_washout_fun
{
public:
    void operator()(_value_type & /*da*/)
    {
        return;
    }
};

//---------------------------------------------------------------------------------------------

//identity也不是标准STL,偷,偷,偷, identity其实就是萃取自己
template <class T> struct smem_identity
{
    const T &operator()(const T &x) const
    {
        return x;
    }
};

//
template <class _Pair> struct mmap_select1st
{
    typename _Pair::first_type &
    operator()(_Pair &__x) const
    {
        return __x.first;
    }

    const typename _Pair::first_type &
    operator()(const _Pair &__x) const
    {
        return __x.first;
    }
};

//
template <class _Pair> struct mmap_select2st
{
    typename _Pair::second_type &
    operator()(_Pair &__x) const
    {
        return __x.second;
    }

    const typename _Pair::second_type &
    operator()(const _Pair &__x) const
    {
        return __x.second;
    }
};

//=============================================================================================
//
class _shm_memory_base : public ZCE_NON_Copyable
{
public:

    //空序号指针标示,32位为0xFFFFFFFF,64位为0xFFFFFFFFFFFFFFFF
    static const size_t  _INVALID_POINT = static_cast<size_t>( -1);

protected:

    //内存基础地址
    char                  *smem_base_;

    //构造函数
    _shm_memory_base():
        smem_base_(NULL)
    {
    };

    //构造函数
    _shm_memory_base(char *basepoint):
        smem_base_(basepoint)
    {
    };

    virtual ~_shm_memory_base()
    {
    }

};

//-----------------------------------------------------------------------------
//放到这儿是因为HASH―EXPIRE和LIST都用了这个结构,
class _shm_list_index
{
public:
    size_t  idx_next_;
    size_t  idx_prev_;

    _shm_list_index():
        idx_next_(_shm_memory_base::_INVALID_POINT),
        idx_prev_(_shm_memory_base::_INVALID_POINT)
    {
    }
    _shm_list_index(const size_t &nxt, const size_t &prv):
        idx_next_(nxt),
        idx_prev_(prv)
    {
    }
    ~_shm_list_index()
    {
    }
};

};

/***********************************************************************************************
zenlib共享内存封装接口参数bool if_restore 的解释说明。
本来以为是一个比较简单的问题，但昨天佐助来问相关问题，我还是解释一下，

bool if_restore == false
表示不进行恢复操作，彻底重建
对于几个共享内存的类，如果文件已经存在会将共享内存文件TRUNC（晴空），然后进行共享内存重建。
如果是对于几个使用（共享）内存的模版的类，会重新对内存的数据进行初始化操作。

bool if_restore == true
表示进行恢复操作，保持原来共享内存（包括映射文件），内存内部数据的现状。
对于几个共享内存的类，如果文件已经存在，不会对文件进行任何操作。（当然还是会进行大小的检查的。如果检查失败会返回失败）。当然如果文件不存在，会重新创建文件。
如果是几个使用（共享）内存的模版类，不会对内存进行任何操作，知会检查各种头部数据是否一致（检查失败也会返回错误）。

通过上面的描述大家应该明白了。
大部分时候，你都可以用 if_restore == true 这种方式（坏消息是我把很多函数的默认参数搞成了false）。
这种方式保证了大部分情况都可以OK。
1.  如果共享内存没有建立，会自动建立共享内存。
2.  如果共享内存已经建立，程序重启，会根据存在的共享内存进行恢复。
3.  如果A,B两人使用一个共享内存，A创建了共享内存，B就可以直接使用。
***********************************************************************************************/

#endif //ZCE_LIB_SHARE_MEM_PRE_DEFINE_H_

