#ogre4asvrd小虫的配置文件，


#日志输出地址信息，
[LOG_CFG]
#日志输出级别，按照从低到高级别排序如下，TRACE,DEBUG,INFO,ERROR,ALERT,FATAL
LOG_LEVEL = FATAL
#日志分割方式，按照文件大小 SIZE,按照事件发生事件,FIVEMINUTE,QUARTER,HOUR,SIXHOUR,DAY,MONTH,YEAR. DAY 最多
FILE_DEVIDE = DAY
#保存的日志文件数量
RESERVE_FILE_NUM = 8
#文件最大尺寸，仅仅当FILE_DEVIDE配置为SIZE时,有效,单位字节
MAX_FILE_SIZE=104857600


#小虫的配置数据
[OGRE_CFG]

#最大支持的ACCEPT的数量，ZERG很强悍的，你可劲的来压迫
MAX_ACCEPT_SVR = 1024

#是否进行端口的保险检查，保险检查，如果打开，不允许打开小于1024的端口，
ZERG_INSURANCE = TRUE

#LISTEN 端口的BACKLOG，如果填写为0，则使用默认值，如果需要listen端口有在某一个时刻有非常大量accept请求，则可以调整这个值，
#注意同时请调整  /proc/sys/net/core/somaxconn  /proc/sys/net/ipv4/tcp_max_syn_backlog，Lighthttpd 的配置是1014
#请参考 http://linux.die.net/man/2/listen
LISTEN_BACKLOG = 128

#发送队列的大小，如果一个端口接受数据比较缓慢，则可能会先放入发送队列，等端口变为可写才能发送过去，
#那么发送队列就要负担缓冲这种危机的任务，发送总缓冲长度实际等于=发送队列的长度*每个队列成员BUFFER的大小(64K)，
#如果是一个需要很多人请求的，或者面向外网的客户端服务器，ACPT_SEND_DEQUE_SIZE 不要设置过大，建议32，
#如果是内网，请求数量有限，那么设置成128,256也是可以接受的，但其实际意义有待观察
#Accept端口的发送队列长度
ACPT_SEND_DEQUE_SIZE = 64
#Connect出去的的端口的发送队列的长度
CNNT_SEND_DEQUE_SIZE = 128

#被Accept的socket，如果一段实际不发送数据过来，超时后会被踢下线，填写为0表示不检查，外网一定要检查
ACCEPTED_TIMEOUT = 60
#如果一socket端口，一段时间没有收到其的任何数据，认为其已经僵死，会踢其下线，填写为0表示不检查，
#这个数值建议双方约定，ZERG之间有端口，会有心跳的握手包，
RECV_TIMEOUT = 0

#对于错误处理的重试次数，目前没有实际作用
RETRY_ERROR = 3

#拒绝服务请求的服务器IP地址列表，用'|'分割
REJECT_IP = 
#允许请求的服务IP地址列表，用'|'分隔，如果这项由填写，那么没有被允许的IP地址无法被ACCEPT，
ALLOW_IP = 



#TCP监听的配置
[TCPACCEPT]

#打开TCP ACCEPT监听的个数
OPENNUMBER = 0
#监听的IP地址
ACCEPTIP1=<$INNERIP$>
#监听的端口
ACCEPTPORT1=80
#TCP收取数据的模块
ACCEPTMODULE1=ogremodhttp.so

ACCEPTIP2=<$INNERIP$>
ACCEPTPORT2=1080
ACCEPTMODULE2=ogremodhttp.so

#UDP的配置
[UDPCOMM]

#打开UDP 端口的数量
OPENNUMBER = 1
#IP地址
UDPIP1=<$INNERIP$>
#端口
UDPPORT1=8080

#自动连接的配置
[AUTO_CONNECT]
#自动连接的个数
AUTO_CONNECT_NUM = 1

#自动连接的IP地址，端口，收取数据的模块
PEERIP1=10.1.44.31
PEERPORT1=18101
PEERMODULE1=ogremodframe.so